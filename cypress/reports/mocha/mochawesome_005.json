{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2021-10-17T20:44:49.221Z",
    "end": "2021-10-17T20:44:49.592Z",
    "duration": 371,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7fc85065-2960-45c8-8562-3c0fcc52f329",
      "title": "",
      "fullFile": "cypress/integration/06_api-test.spec.js",
      "file": "cypress/integration/06_api-test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "532bf262-5030-4a6c-b6ff-2ae737ae3202",
          "title": "Test api endpoint shop",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get item success",
              "fullTitle": "Test api endpoint shop Get item success",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'http://shop.bugred.ru/api/items/get/', {\n  \"id\": '51'\n}).then(response => {\n  expect(response.body.result).to.have.property('name', 'Шортики');\n  expect(response.body.result).to.have.property('section', 'Платья');\n  expect(response.body.result).to.have.property('description', 'Модное платье из новой коллекции!');\n  expect(response.body.result).to.have.property('color', 'RED');\n  expect(response.body.result).to.have.property('size', '44');\n  expect(response.body.result).to.have.property('params', '');\n  expect(response.body.result).to.have.property('photo', 'http://shop.bugred.ruhttps://via.placeholder.com/300x300');\n});",
              "err": {},
              "uuid": "92ae759d-cc15-4857-87e3-f914382f8dd2",
              "parentUUID": "532bf262-5030-4a6c-b6ff-2ae737ae3202",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get item price",
              "fullTitle": "Test api endpoint shop Get item price",
              "timedOut": null,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'http://shop.bugred.ru/api/items/get/', {\n  \"id\": '5'\n}).then(response => {\n  expect(response.body.result).to.have.property('price', 1500);\n});",
              "err": {},
              "uuid": "1d5608a1-53ab-4f16-8a1f-4b53aebb7b83",
              "parentUUID": "532bf262-5030-4a6c-b6ff-2ae737ae3202",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get without id",
              "fullTitle": "Test api endpoint shop Get without id",
              "timedOut": null,
              "duration": 45,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'http://shop.bugred.ru/api/items/get/').then(response => {\n  expect(response.body).to.have.property('error', 'id_not_filled');\n  expect(response.body).to.have.property('message', 'Поле ID товара  не заполнено');\n});",
              "err": {},
              "uuid": "f9a76d46-cb13-4cdd-be83-d08bae537452",
              "parentUUID": "532bf262-5030-4a6c-b6ff-2ae737ae3202",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get item not found",
              "fullTitle": "Test api endpoint shop Get item not found",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'http://shop.bugred.ru/api/items/get/', {\n  \"id\": '567'\n}).then(response => {\n  expect(response.body).to.have.property('error', 'item_with_id_not_found');\n  expect(response.body).to.have.property('message', 'Товар с ID 567 не найден!');\n});",
              "err": {},
              "uuid": "31b39849-c74f-4c38-b6dd-bf922075732c",
              "parentUUID": "532bf262-5030-4a6c-b6ff-2ae737ae3202",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get query select item",
              "fullTitle": "Test api endpoint shop Get query select item",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('GET', 'http://shop.bugred.ru/api/items/select/', {\n  \"sql_query\": \"select * from items where last_id = 2;\"\n}).then(response => {\n  expect(response.body.result[0]).to.have.property('title', 'Товар 2');\n  expect(response.body.result[0]).to.have.property('price', '1000');\n  expect(response.body.result[0]).to.have.property('image', '/files/tmpfiles/avatar_big.jpg');\n  expect(response.body.result[0]).to.have.property('category', '1');\n  expect(response.body.result[0]).to.have.property('sort', '2');\n});",
              "err": {},
              "uuid": "cc724a40-bfe3-4e68-b38b-8e1fdf5e6197",
              "parentUUID": "532bf262-5030-4a6c-b6ff-2ae737ae3202",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92ae759d-cc15-4857-87e3-f914382f8dd2",
            "1d5608a1-53ab-4f16-8a1f-4b53aebb7b83",
            "f9a76d46-cb13-4cdd-be83-d08bae537452",
            "31b39849-c74f-4c38-b6dd-bf922075732c",
            "cc724a40-bfe3-4e68-b38b-8e1fdf5e6197"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.3.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}